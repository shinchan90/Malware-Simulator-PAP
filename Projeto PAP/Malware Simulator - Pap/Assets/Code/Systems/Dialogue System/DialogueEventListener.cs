using Newtonsoft.Json;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class DialogueEventListener : GameEventListener
{
    [SerializeField] private string DialogueBit;
    [SerializeField] private TextAsset DialogueJson;
    //[SerializeField] private DialogueEvent DialogueEvent;
    private DialogueManager _DialogueManager;
    [SerializeField] private string eventName;

    private void Start()
    {
        _DialogueManager= FindObjectOfType<DialogueManager>();
    }

    public override void InvokeEvent()
    {
        //var _DialogueEvent = GetComponent<DialogueEvent>();

        var DialogueEventData = JsonConvert.DeserializeObject<Dictionary<string, Dictionary<string, string[]>>>(DialogueJson.text);

        if(DialogueEventData.TryGetValue(eventName, out var dialogueData) && dialogueData.TryGetValue(DialogueBit, out var dialogue))
        {
            string DialogueJoin = string.Join("", dialogue);
            _DialogueManager.StartDialogue(DialogueJson, DialogueJoin);
        }

        else
        {

            Debug.Log("Isn't workin ://");
        }
        
    }
}
