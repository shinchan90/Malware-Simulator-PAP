using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class TutorialPrompts : MonoBehaviour
{
    [SerializeField] private GameObject Prompt;
    [SerializeField] private AudioClip PromptClip;
    [SerializeField] private GameObject LoginScreen;
    [SerializeField] private GameObject ChooseVirusScreen;
    [SerializeField] private GameObject MainScren;
    [SerializeField] private InputField NameField;
    [SerializeField] private AudioClip ClickingSound;
    [SerializeField] private AudioClip ErrorSound;
    [SerializeField] private GameObject AlertWindow;
    [SerializeField] private GameObject SettingsTab;
    private bool hasPlayed = false;

    private GameObject Player;
    private AudioSource AudioSource;
    void Start()
    {
        AudioSource = GetComponent<AudioSource>();
        if(SceneManager.GetActiveScene().buildIndex== 1){
            Player = GameObject.FindGameObjectWithTag("Player");
            Debug.Log(Player.tag);
            if (Player != null)
            {
                StartCoroutine(ShowPrompt());
            }
        } 
        
        if(LoginScreen != null && LoginScreen.activeSelf && SceneManager.GetActiveScene().buildIndex == 2)
        {
            StartCoroutine(ShowPrompt2());
        }
    }
   public IEnumerator ShowPrompt()
    {
        yield return new WaitForSeconds(3);
        AudioSource.PlayOneShot(PromptClip);
        Prompt.SetActive(true);
        yield return new WaitForSeconds(5);
        Prompt.SetActive(false);

    }

    public void ChangeScreen()
    {
        if(NameField.text != "")
        {
            ChooseVirusScreen.SetActive(true);
            LoginScreen.SetActive(false);
            
        }

        else
        {
            Debug.Log("Think of a way to make a pretty error message :)");
        }
        
    }

    public void ChangeScreen2()
    {
        ChooseVirusScreen.SetActive(false);
        MainScren.SetActive(true);

    }

    public void SoundError()
    {
        if (AlertWindow.activeSelf && !hasPlayed)
        {
            AudioSource.PlayOneShot(ErrorSound);
            hasPlayed= true;
        }
    }

    public void Update()
    {
        SoundError();
        if (Input.GetKeyDown(KeyCode.Escape))
        {
            SettingsTab.SetActive(true);
        }

    }



    public IEnumerator ShowPrompt2() 
    {
        yield return new WaitForSeconds(1);
        if (LoginScreen.activeSelf)
        {
            AudioSource.PlayOneShot(PromptClip);
            Prompt.SetActive(true);
            yield return new WaitForSeconds(1);
            Prompt.SetActive(false);
        }
    }
}
